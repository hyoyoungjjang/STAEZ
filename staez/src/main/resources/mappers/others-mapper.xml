<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace: 해당 mapper파일의 고유한 별칭 -->
<mapper namespace="othersMapper">

	<resultMap type="Concert" id="concertResult">
	    <result column="concert_no" property="concertNo"/>
	    <result column="theater_no" property="theaterNo"/>
	    <result column="concert_title" property="concertTitle"/>
	    <result column="concert_plot" property="concertPlot"/>
	    <result column="concert_runtime" property="concertRuntime"/>
	    <result column="concert_members" property="concertMembers"/>
	    <result column="concert_production" property="concertProduction"/>
	    <result column="age_limit" property="ageLimit"/>
	    <result column="update_date" property="updateDate"/>
	    <result column="concert_status" property="concertStatus"/>
	    <result column="change_name" property="changeName"/>
	    <result column="origin_name" property="originName"/>
	    <result column="file_path" property="filePath"/>
	    <result column="start_date" property="startDate"/>
	    <result column="end_date" property="endDate"/>
	    <result column="category_no" property="categoryNo"/>
	    <result column="category_name" property="categoryName"/>
	    <result column="theater_name" property="theaterName"/>
   </resultMap>
	
	<resultMap type="Category" id="categoryResult">
 		<result column="category_no" property="categoryNo" />
 		<result column="ref_category_no" property="refCategoryNo" />
 		<result column="category_name" property="categoryName" />
 		<result column="category_level" property="categoryLevel" />
	</resultMap>
	
	<resultMap type="Reserve" id="reserveResult">
		<result column="reserve_no" property="reserveNo" />
		<result column="concert_no" property="concertNo" />
		<result column="user_no" property="userNo" />
		<result column="reserve_row" property="reserveRow" />
		<result column="reserve_col	" property="reserveCol" />
		<result column="reserve_date" property="reserveDate" />
		<result column="pay_method" property="payMethod" />
		<result column="concert_date" property="concertDate" />
		<result column="concert_times" property="concertTimes" />
		<result column="reserve_status" property="reserveStatus" />
	</resultMap>
	
	<resultMap type="Board" id="boardResult">
		<result column="board_no" property="boardNo" />
		<result column="board_title" property="boardTitle" />
		<result column="board_content" property="boardContent" />
		<result column="board_write_date" property="boardWriteDate" />
		<result column="user_no" property="userNo" />
		<result column="nickname" property="nickname" />
		<result column="like_count" property="likeCount" />
		<result column="category_no" property="categoryNo" />
		<result column="category_name" property="categoryName" />
		<result column="path" property="path" />
	</resultMap>
	
	<resultMap type="ProfileImg" id="profileImgResult">
		<result column="file_no" property="fileNo" />
		<result column="user_no" property="userNo" />
		<result column="origin_name" property="originName" />
		<result column="change_name" property="changeName" />
		<result column="file_path" property="filePath" />
		<result column="upload_date" property="uploadDate" />
		<result column="status" property="status" />
	</resultMap>
	
	<resultMap type="BoardLike" id="boardLikeResult">
		<result column="board_like_no" property="boardLikeNo" />
		<result column="user_no" property="userNo" />
		<result column="board_no" property="boardNo" />
		<result column="status" property="likeDate" />
		<result column="like_date" property="status" />
	</resultMap>
	
	
	<select id="selectCategory" resultMap="categoryResult">
		select category_no, category_name
		from category
		where ref_category_no = 1
	</select>	
	
	<select id="selectCategoryLikeConcert" resultMap="concertResult">
		select 
	         c.concert_no, 
	         c.concert_title, 
	         min(cs.start_date) as start_date,
	         max(cs.end_date) as end_date, 
	         cg.category_name
      	from concert c
        left join (select 
		            	 cl.concert_no,
		           		 count(distinct cl.concert_like_no) as countlike
		            from concert_like cl
		            join concert c using (concert_no)
		            join concert_schedule cs on (c.concert_no = cs.concert_no)
		            where cl.status = 'Y'
		            group by cl.concert_no
		            order by countlike desc) l on (l.concert_no = c.concert_no)
     	left join concert_category cc on (c.concert_no = cc.concert_no)
    	left join category cg on (cc.category_no = cg.category_no)
     	left join concert_schedule cs on (c.concert_no = cs.concert_no)
        where c.concert_status = 'Y'
    	and cg.category_no = #{cNo}
		group by c.concert_no, cg.category_name
    	limit 10;
	</select>
	
	<select id="selectCategoryConcertImg" resultMap="concertResult">
		select 
			c.concert_no, 
			ca.file_path, 
			ca.change_name
		from concert c
		left join(select 
				cl.concert_no, 
				count(distinct cl.concert_like_no) as countlike
				from concert_like cl
				join concert c using (concert_no)
				join concert_schedule cs on (c.concert_no = cs.concert_no)
				group by cl.concert_no
				order by countlike desc) l on (l.concert_no = c.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		left join concert_schedule cs on (c.concert_no = cs.concert_no)
		where cg.category_no = #{cNo}
		and ca.status = 'Y'
		group by c.concert_no, ca.file_path, ca.change_name
		limit 10;
	</select>
	
	<select id="selectApiConcert" resultMap="concertResult">
		select 
	         c.concert_no, 
	         c.concert_title, 
	         min(cs.start_date) as start_date,
	         max(cs.end_date) as end_date, 
	         cg.category_name,
	         c.concert_plot,
	         ca.origin_name
      	from concert c
        left join (select 
		            	 cl.concert_no,
		           		 count(distinct cl.concert_like_no) as countlike,
						 cl.status
		            from concert_like cl
		            join concert c using (concert_no)
		            where cl.status = 'Y'
		            group by cl.concert_no, cl.status
		            order by countlike desc) l on (l.concert_no = c.concert_no)
     	left join concert_category cc on (c.concert_no = cc.concert_no)
    	left join category cg on (cc.category_no = cg.category_no)
     	left join concert_schedule cs on (c.concert_no = cs.concert_no)
     	left join concert_attachment ca on (c.concert_no = ca.concert_no)
        where c.concert_status = 'Y'
    	and cg.category_no = 8 or c.age_limit = 'age_limit'
		group by c.concert_no, cg.category_name, c.concert_plot, ca.origin_name
		order by c.concert_no asc
    	limit 10
	</select>
	
	<select id="selectApiConcertImg" resultMap="concertResult">
		select 
			c.concert_no, 
			ca.file_path, 
			ca.change_name,
			ca.origin_name
		from concert c
		left join(select 
				cl.concert_no, 
				count(distinct cl.concert_like_no) as countlike,
	 			cl.status
				from concert_like cl
				join concert c using (concert_no)
				join concert_schedule cs on (c.concert_no = cs.concert_no)
				group by cl.concert_no, cl.status
				order by countlike desc) l on (l.concert_no = c.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		left join concert_schedule cs on (c.concert_no = cs.concert_no)
		where cg.category_no = 8 or c.age_limit = 'age_limit'
		and ca.status = 'Y'
		group by c.concert_no, ca.file_path, ca.change_name, ca.origin_name
		order by c.concert_no asc
		limit 10
	</select>
	
	<select id="selectLatestCategoryConcert" resultMap="concertResult">
		select 
		   c.concert_no, 
		   c.concert_title, 
		   start_date,
		   end_date,
		   cg.category_name,
		   ca.origin_name
		from (select 
		      c.concert_no,
		      min(cs.start_date) as start_date,
		          max(cs.start_date) as latest,
		      max(cs.end_date) as end_date
		      from concert c
		      join concert_schedule cs using (concert_no)
		      group by c.concert_no
		      order by latest desc) l
		join concert c on (l.concert_no = c.concert_no)   
		join concert_category cc on (c.concert_no = cc.concert_no)
		join category cg on (cc.category_no = cg.category_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_status = 'Y'
		and cg.category_no = #{cNo}
		and ca.status = 'Y'
		order by start_date desc
		limit 10;
	</select>
	
	<select id="selectLatestCategoryConcertImg" resultMap="concertResult">
	select 
			c.concert_no, 
			c.concert_title,
			ca.file_path, 
			ca.change_name,
			ca.origin_name
		from (select 
				c.concert_no,
				min(cs.start_date) as start_date,
			 	max(cs.start_date) latest,
			 	max(cs.end_date) end_date
				from concert c
				join concert_schedule cs using (concert_no)
				group by c.concert_no
				order by latest desc) l
		join concert c on (l.concert_no = c.concert_no)	
		join concert_category cc on (c.concert_no = cc.concert_no)
		join category cg on (cc.category_no = cg.category_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_status = 'Y'
		and cg.category_no = #{cNo}
		and ca.status = 'Y'
		order by start_date desc
		limit 10;
	</select>
	
	<select id="selectLatestApiConcert" resultMap="concertResult">
	select 
		   c.concert_no, 
		   c.concert_title, 
		   start_date,
		   end_date,
		   cg.category_name,
		   c.concert_plot,
		   ca.origin_name
		from (select 
		      c.concert_no,
		      min(cs.start_date) as start_date,
		      max(cs.start_date) as latest,
		      max(cs.end_date) as end_date
		      from concert c
		      join concert_schedule cs using (concert_no)
		      group by c.concert_no
		      order by latest desc) l
		left join concert c on (l.concert_no = c.concert_no)   
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_status = 'Y'
		and (cg.category_no = 8 or c.age_limit = 'age_limit')
		and ca.status = 'Y'
		limit 10
	</select>
	
	<select id="selectLatestApiConcertImg" resultMap="concertResult">
	select 
			c.concert_no, 
			ca.file_path, 
			ca.change_name,
			ca.origin_name
		from (select 
		      c.concert_no,
		      min(cs.start_date) as start_date,
		      max(cs.start_date) as latest,
		      max(cs.end_date) as end_date
		      from concert c
		      join concert_schedule cs using (concert_no)
		      group by c.concert_no
		      order by latest desc) l
		left join concert c on (l.concert_no = c.concert_no)	
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_status = 'Y'
		and (cg.category_no = 8 or c.age_limit = 'age_limit')
		and ca.status = 'Y'
		limit 10
	</select>
	
	<select id="selectDateCategoryConcert" resultMap="concertResult" parameterType="Map">
	select 
		c.concert_no, 
		c.concert_title, 
		t.theater_name, 
		min(s.start_date) start_Date, 
		max(s.end_date) end_date, 
		c.concert_runtime, 
		ca.file_path, 
		ca.change_name, 
		cg.category_no 
	from (select concert_no, start_date, end_Date
			from concert_schedule 
			where #{date}::date between start_date and end_date
			and status = 'Y'
			and concert_no not in (select concert_no
                              from concert_schedule
								where #{date}::date between start_date and end_date
                              and schedule = 'N'
							  and status = 'Y'
								))s
	join concert c on (s.concert_no = c.concert_no)
	join theater t on (c.theater_no = t.theater_no)
	join concert_attachment ca on (c.concert_no = ca.concert_no)
	join concert_category cc on (c.concert_no = cc.concert_no)
	join category cg on (cc.category_no = cg.category_no)
	where cg.category_no = #{cNo}
	and ca.status = 'Y'
	GROUP BY c.concert_no, c.concert_title, t.theater_name, c.concert_runtime, ca.file_path, ca.change_name, cg.category_no;
	</select>
	
	<select id="selectApiPageConcertlist" resultMap="concertResult" parameterType="Map">
	select 
		c.concert_no, 
		c.concert_title, 
		t.theater_name, 
		min(s.start_date) start_Date, 
		max(s.end_date) end_date, 
		c.concert_runtime, 
		ca.file_path, 
		ca.change_name, 
		cg.category_no,
		c.concert_plot,
		ca.origin_name
	from (select concert_no, start_date, end_Date
			from concert_schedule 
			where #{date}::date between start_date and end_date
			and status = 'Y'
			and concert_no not in (select concert_no
								    from concert_schedule
									where #{date}::date between start_date and end_date
								    and schedule = 'N'
								    and status = 'Y'
								))s
	join concert c on (s.concert_no = c.concert_no)
	left join theater t on (c.theater_no = t.theater_no)
	join concert_attachment ca on (c.concert_no = ca.concert_no)
	left join concert_category cc on (c.concert_no = cc.concert_no)
	left join category cg on (cc.category_no = cg.category_no)
	where (cg.category_no = 8 or ca.origin_name = 'api')
	and ca.status = 'Y'
	GROUP BY c.concert_no, c.concert_title, t.theater_name, c.concert_runtime, ca.file_path, ca.change_name, cg.category_no, c.concert_plot, ca.origin_name
	</select>
	
	<select id="selectApiConcertList" resultMap="concertResult" parameterType="Map">
		select c.concert_no
		from concert c
		join concert_schedule cs on (c.concert_no = cs.concert_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		where  #{date}::date between start_date and end_date
		and ca.origin_name = 'api'
	</select>
	
	<select id="selectReserveConcert" resultMap="reserveResult">
		select concert_no, concert_date
		from reserve
		where reserve_status = 'Y'
		and user_no = #{uNo}
	</select>
	
	<select id="selectChoiceReserveConcert" resultMap="concertResult" parameterType="Map">
		select 
				c.concert_no, 
				c.concert_title, 
				t.theater_name, 
				min(cs.start_date) start_Date, 
				max(cs.end_date) end_date, 
				c.concert_runtime, 
				ca.file_path, 
				ca.change_name, 
				cg.category_no
		from concert c
		join reserve r on (c.concert_no = r.concert_no)
		join theater t on (c.theater_no = t.theater_no)
		join concert_schedule cs on (c.concert_no = cs.concert_no)
		join concert_attachment ca on (c.concert_no = ca.concert_no)
		join concert_category cc on (c.concert_no = cc.concert_no)
		join category cg on (cc.category_no = cg.category_no)
		where r.user_no = #{uNo}
		and r.reserve_status = 'Y'
		and r.concert_date = #{date}::date
		group by c.concert_no, c.concert_title, t.theater_name,
				c.concert_runtime, ca.file_path, ca.change_name, cg.category_no
	</select>
	
	<select id="selectPopularBoard" resultMap="boardResult">
		select b.board_no, b.user_no, b.board_title, b.board_content, bl.like_count "like_count", b.user_no
		from (select board_no, count(board_no) like_count
			  from board_like
			  where status = 'Y'
			  group by board_no
			  order by like_count desc
			 ) bl
		join board b on (b.board_no = bl.board_no)
		where b.board_code = 2
		order by like_count desc
		limit 5
	</select>
	
	<select id="selectPopularBoardCategory" resultMap="boardResult">
		select bl.board_no, cg.category_no, cg.category_name
		from (select board_no, count(board_no) likeCount
			  from board_like
			  where status = 'Y'
			  group by board_no
			  order by likeCount desc
			 ) bl
		join board_category bc on (bc.board_no = bl.board_no)
		join board b on (b.board_no = bl.board_no)
		join category cg on (bc.category_no = cg.category_no)
		where b.board_code = 2
		order by likeCount desc
		limit 10
	</select>
	
	<select id="selectpopularBoardUserProfile" resultMap="profileImgResult">
		select pi.file_path, pi.change_name
		from (select board_no, count(board_no) likeCount
			  from board_like
			  where status = 'Y'
			  group by board_no
			  order by likeCount desc
			 ) bl
		join board b on (b.board_no = bl.board_no)
		join profile_img pi on (b.user_no = pi.user_no) 
		where b.board_code = 2
		order by likeCount desc
		limit 5
	</select>
	
	<select id="checkLikeStatus" resultType="_int" parameterType="Map">
		select board_like_no
		from board_like
		where user_no = #{uNo}
		and board_no = #{bNo}
	</select>
	
	<insert id="insertBoardLike" parameterType="Map">
		insert into board_like 
		values(default, #{uNo}, #{bNo}, default, default)
	</insert>
	
	<update id="updateBoardLike" parameterType="Map">
	update board_like set status = 'Y', like_date = 'now'
	where user_no = #{uNo}
	and board_no = #{bNo}
	</update>
	
	<select id="selectLikeCount" parameterType="Map" resultMap="boardLikeResult">
		select board_like_no
		from board_like
		where board_no = #{bNo}
		and status='Y'
	</select>
	
	<update id="updateNoLike" parameterType="Map">
		update board_like set status = 'N', like_date = 'now'
		where user_no = #{uNo}
		and board_no = #{bNo}
	</update>
	
	<select id="selectUserLikeBoardNo" resultMap="boardLikeResult">
		select board_no
		from board_like
		where user_no = #{userNo}
		and status = 'Y'
	</select>
	
	<select id="selectKeywordConcert" resultMap="concertResult">
		select c.concert_no, c.concert_title, cg.category_no, cg.category_name, start_date, end_date, c.concert_plot
		from concert c 
		join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		where c.concert_title like  '%' || #{keyword} || '%'
		and c.concert_status = 'Y'
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		order by l.end_date asc
		limit 5
	</select>
	
	<select id="selectKeywordConcertImg" resultMap="concertResult">
	select c.concert_no, ca.file_path, ca.change_name, ca.origin_name
	from concert c 
	join (select 
				cs.concert_no,
				min(start_date) start_date,
				max(end_date) end_Date
		  from concert_schedule cs
		  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		where c.concert_title like '%' || #{keyword} || '%'
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		and c.concert_status = 'Y'
		order by l.end_date asc
		limit 5
	</select>
	
	<select id="selectKeywordBoard" resultMap="boardResult">
		select b.board_no, b.board_title, b.board_content, b.board_write_date, u.nickname
		from board b
		join staez_user u on (b.user_no = u.user_no)
		where b.board_code = 2
		and b.board_status = 'Y'
		and u.user_status ='Y'
		and (b.board_title like '%' || #{keyword} || '%' or b.board_content like '%' || #{keyword} || '%')
		order by b.board_write_date desc
		limit 3
	</select>
	
	<select id="selectkeywordCategoryList" resultMap="boardResult">
		SELECT
			c.category_no,
			c.category_name
		FROM board_category bc
		JOIN category c ON (bc.category_no = c.category_no)
		WHERE bc.board_no = #{bNo}
	</select>
	
	<select id="selectKeywordUserProfilet" resultMap="profileImgResult">
		select u.user_no, pi.file_path, pi.change_name
		from board b
		join staez_user u on (b.user_no = u.user_no)
		left join profile_img pi on (pi.user_no = u.user_no)
		where b.board_no = #{bNo}
	</select>
	
	<select id="selectKeywordMoreEndConcert" resultMap="concertResult">
		select c.concert_no, c.concert_title, cg.category_no, cg.category_name, start_date, end_date, c.concert_plot
		from concert c
		left join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		where c.concert_title like '%' || #{keyword} || '%' 
		and c.concert_status = 'Y'
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		order by l.end_date asc
	</select>
	
	<select id="selectKeywordMoreEndConcertCount" resultMap="concertResult">
		select c.concert_no, c.concert_title, cg.category_no, cg.category_name, start_date, end_date
		from concert c
		left join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		where c.concert_title like '%' || #{keyword} || '%' 
		and c.concert_status = 'Y'
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		order by l.end_date asc
	</select>
	
	<select id="selectKeywordMoreEndConcertImg" resultMap="concertResult">
		select c.concert_no, ca.file_path, ca.change_name, ca.origin_name
		from concert c
		left join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		where c.concert_title like '%' || #{keyword} || '%' 
		and c.concert_status = 'Y'
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		order by l.end_date asc
	</select>
	
	<select id="selectKeywordMoreEndConcertImgCount" resultMap="concertResult">
		select c.concert_no, ca.file_path, ca.change_name, ca.origin_name
		from concert c
		left join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		where c.concert_title like '%' || #{keyword} || '%' 
		and c.concert_status = 'Y'
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		order by l.end_date asc
	</select>
	
	<select id="selectKeywordMoreConcert" resultMap="concertResult">
		select c.concert_no, c.concert_title, cg.category_no, cg.category_name, start_date, end_date, c.concert_plot
		from concert c
		left join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		where c.concert_title like '%' || #{keyword} || '%'
		and l.end_date >= current_date
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		and c.concert_status = 'Y'
		order by l.end_date asc
	</select>
	
	<select id="selectKeywordMoreConcertCount" resultMap="concertResult">
		select c.concert_no, c.concert_title, cg.category_no, cg.category_name, start_date, end_date
		from concert c
		left join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		where c.concert_title like '%' || #{keyword} || '%'
		and l.end_date >= current_date
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		and c.concert_status = 'Y'
		order by l.end_date asc
	</select>
	
	<select id="selectKeywordMoreConcertImg" resultMap="concertResult">
		select c.concert_no, ca.file_path, ca.change_name, ca.origin_name
				from concert c
		left join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_title like '%' || #{keyword} || '%'
		and l.end_date >= current_date
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		and c.concert_status = 'Y'
		order by l.end_date asc
	</select>
	
	<select id="selectKeywordMoreConcertImgCount" resultMap="concertResult">
		select c.concert_no, ca.file_path, ca.change_name, ca.origin_name
				from concert c
		left join (select 
					cs.concert_no,
					min(start_date) start_date,
					max(end_date) end_Date
			  from concert_schedule cs
			  group by cs.concert_no) l on (c.concert_no = l.concert_no)
		left join concert_category cc on (c.concert_no = cc.concert_no)
		left join category cg on (cc.category_no = cg.category_no)
		left join concert_attachment ca on (c.concert_no = ca.concert_no)
		where c.concert_title like '%' || #{keyword} || '%'
		and l.end_date >= current_date
		and (c.age_limit = 'age_limit' or cg.category_no is not null)
		and c.concert_status = 'Y'
		order by l.end_date asc
	</select>

</mapper>

